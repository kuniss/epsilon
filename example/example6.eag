! ------------------------   DECL/APPL

S = .

Tab = | id ";" Tab.

S <+ Tab: Tab>:
  <, Tab>
    { <- Tab: Tab, + Tab1: Tab>
        "DECL" id <id> Find <id, Tab, "FALSE">
        <id ";" Tab, Tab1>
    | <- Tab: Tab, + Tab1: Tab>
        "APPL" id <id> Find <id, Tab, "TRUE">
        <Tab, Tab1>
    } <- Tab: Tab, + Tab: Tab>.

x = "a" | "b".
id* = x | id x.

x:
  <+ "a": x> "a" | <+ "b": x> "b".

id *<+ id: id>:
  x <x>
  <x, id>
    { <- id1: id, + id: id> x <x>  <id1 x, id>
    } <- id: id, + id: id>.

Bool = "TRUE" | "FALSE".

Find <- id: id, - : Tab, + "FALSE": Bool>: .
Find <- id: id, - id ";" Tab: Tab, + "TRUE": Bool>: .
Find <- id: id, - #id ";" Tab: Tab, + Bool: Bool>:
  Find <id, Tab, Bool>.
